{"version":3,"sources":["mockData.js","components/ContactListComponent.js","components/ConversationComponent.js","App.js","index.js"],"names":["contactList","id","name","profilePic","lastText","lastTextTime","messagesList","messageType","text","senderID","addedOn","Container","styled","div","ProfileInfoDiv","SearchBox","SearchContainer","SearchIcon","img","SearchInput","input","ContactItem","ContactInfo","ContactName","span","MessageText","MessageTime","ProfileImage","ProfileIcon","ContactComponent","props","userData","setChat","onClick","src","ContactListComponent","placeholder","map","ProfileHeader","ProfileInfo","ChatBox","MessageContainer","MessageDiv","isYours","Message","EmojiImage","ConversationComponent","selectedChat","useState","setText","pickerVisible","togglePicker","messageList","setMessageList","messageData","pickerStyle","position","bottom","onEmojiClick","e","emoji","value","onKeyDown","event","key","messages","push","onChange","target","ChatPlaceholder","Placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05a492b4.chunk.js","sourcesContent":["export const contactList = [\n  {\n    id: 1,\n    name: \"Ayush Kulshrestha\",\n    profilePic: \"/profile/ayushk.jpeg\",\n    lastText: \"Hey Man\",\n    lastTextTime: \"12:58 PM\",\n  },\n  {\n    id: 2,\n    name: \"John Appleseed\",\n    profilePic: \"/profile/theindiandev.jpeg\",\n    lastText: `I'm with @theindiandev`,\n    lastTextTime: \"12:45 PM\",\n  },\n  {\n    id: 3,\n    name: \"Elon Bezoz\",\n    profilePic: \"/profile/elon.jpeg\",\n    lastText: \"Where is my Tesla?\",\n    lastTextTime: \"12:30 PM\",\n  },\n  {\n    id: 4,\n    name: \"Jeff Musk\",\n    profilePic: \"/profile/jeff.jpeg\",\n    lastText: \"Travelling to space\",\n    lastTextTime: \"12:00 PM\",\n  },\n];\nexport const messagesList = [\n  {\n    id: 1,\n    messageType: \"TEXT\",\n    text: \"Hey Man 😁\",\n    senderID: 0,\n    addedOn: \"12:00 PM\",\n  },\n  {\n    id: 2,\n    messageType: \"TEXT\",\n    text: \"Hey, What's up?\",\n    senderID: 1,\n    addedOn: \"12:01 PM\",\n  },\n  {\n    id: 3,\n    messageType: \"TEXT\",\n    text: \"All Good, What about you?\",\n    senderID: 0,\n    addedOn: \"12:00 PM\",\n  },\n  {\n    id: 4,\n    messageType: \"TEXT\",\n    text: \"I'm good as well\",\n    senderID: 1,\n    addedOn: \"12:00 PM\",\n  },\n  {\n    id: 5,\n    messageType: \"TEXT\",\n    text: \"Great 😁\",\n    senderID: 0,\n    addedOn: \"12:00 PM\",\n  },\n  {\n    id: 5,\n    messageType: \"TEXT\",\n    text: \"Have you subscribed The Indian Dev ?\",\n    senderID: 1,\n    addedOn: \"12:00 PM\",\n  },\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { contactList } from \"../mockData\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1.6;\n  height: 100%;\n  width: 100%;\n  border-right: 1px solid #dadada;\n`;\n\nconst ProfileInfoDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n`;\n\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f6f6f6;\n  padding: 10px;\n`;\nexport const SearchContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: white;\n  border-radius: 16px;\n  width: 100%;\n  padding: 5px 10px;\n  gap: 10px;\n`;\nconst SearchIcon = styled.img`\n  width: 28px;\n  height: 28px;\n`;\nexport const SearchInput = styled.input`\n  width: 100%;\n  outline: none;\n  border: none;\n  font-size: 15px;\n`;\n\nconst ContactItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  border-bottom: 1px solid #f2f2f2;\n  background: white;\n  cursor: pointer;\n\n  :hover {\n    background: #ebebeb;\n  }\n`;\nconst ContactInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0 12px;\n`;\n\nconst ContactName = styled.span`\n  width: 100%;\n  font-size: 16px;\n  color: black;\n`;\n\nconst MessageText = styled.span`\n  width: 100%;\n  font-size: 14px;\n  margin-top: 3px;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst MessageTime = styled.span`\n  font-size: 12px;\n  margin-right: 10px;\n  color: rgba(0, 0, 0, 0.45);\n  white-space: nowrap;\n`;\n\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nconst ProfileIcon = styled(ProfileImage)`\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  margin-left: 12px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  object-fit: cover;\n`;\nconst ContactComponent = (props) => {\n  const { userData, setChat } = props;\n  return (\n    <ContactItem onClick={() => setChat(userData)}>\n      <ProfileIcon src={userData.profilePic} />\n      <ContactInfo>\n        <ContactName>{userData?.name}</ContactName>\n        <MessageText>{userData?.lastText}</MessageText>\n      </ContactInfo>\n      <MessageTime> {userData?.lastTextTime}</MessageTime>\n    </ContactItem>\n  );\n};\nfunction ContactListComponent(props) {\n  return (\n    <Container>\n      <ProfileInfoDiv>\n        <ProfileImage src={\"/profile/theindiandev.jpeg\"} />\n      </ProfileInfoDiv>\n      <SearchBox>\n        <SearchContainer>\n          <SearchIcon src={\"/search-icon.svg\"} />\n          <SearchInput placeholder=\"Search or start new chat\" />\n        </SearchContainer>\n      </SearchBox>\n      {contactList.map((userData) => (\n        <ContactComponent userData={userData} setChat={props.setChat} />\n      ))}\n    </Container>\n  );\n}\n\nexport default ContactListComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchContainer, SearchInput } from \"./ContactListComponent\";\nimport Picker from \"emoji-picker-react\";\nimport { messagesList } from \"../mockData\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  height: 100%;\n  width: 100%;\n  background: #f6f7f8;\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n  align-items: center;\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nconst ContactName = styled.span`\n  font-size: 16px;\n  color: black;\n`;\n\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background: #e5ddd6;\n`;\nconst MessageDiv = styled.div`\n  display: flex;\n  justify-content: ${(props) => (props.isYours ? \"flex-end\" : \"flex-start\")};\n  margin: 5px 15px;\n`;\nconst Message = styled.div`\n  background: ${(props) => (props.isYours ? \"#daf8cb\" : \"white\")};\n  padding: 8px 10px;\n  border-radius: 4px;\n  max-width: 50%;\n  color: #303030;\n  font-size: 14px;\n`;\nconst EmojiImage = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  opacity: 0.4;\n  cursor: pointer;\n`;\nfunction ConversationComponent(props) {\n  const { selectedChat } = props;\n  const [text, setText] = useState(\"\");\n  const [pickerVisible, togglePicker] = useState(false);\n  const [messageList, setMessageList] = useState(messagesList);\n\n  const onEnterPress = (event) => {\n    if (event.key === \"Enter\") {\n      const messages = [...messageList];\n      messages.push({\n        id: 0,\n        messageType: \"TEXT\",\n        text,\n        senderID: 0,\n        addedOn: \"12:02 PM\",\n      });\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n  return (\n    <Container>\n      <ProfileHeader>\n        <ProfileInfo>\n          <ProfileImage src={selectedChat.profilePic} />\n          <ContactName>{selectedChat.name}</ContactName>\n        </ProfileInfo>\n      </ProfileHeader>\n      <MessageContainer>\n        {messageList.map((messageData) => (\n          <MessageDiv isYours={messageData.senderID === 0}>\n            <Message isYours={messageData.senderID === 0}>\n              {[messageData.text]}\n            </Message>\n          </MessageDiv>\n        ))}\n      </MessageContainer>\n\n      <ChatBox>\n        <SearchContainer>\n          {pickerVisible && (\n            <Picker\n              pickerStyle={{ position: \"absolute\", bottom: \"60px\" }}\n              onEmojiClick={(e, emoji) => {\n                  setText(text + emoji.emoji)\n                  togglePicker(false)\n              }}\n            />\n          )}\n          <EmojiImage\n            src={\"/data.svg\"}\n            onClick={() => togglePicker((pickerVisible) => !pickerVisible)}\n          />\n          <SearchInput\n            placeholder=\"Type a message\"\n            value={text}\n            onKeyDown={onEnterPress}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </SearchContainer>\n      </ChatBox>\n    </Container>\n  );\n}\n\nexport default ConversationComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ContactListComponent from \"./components/ContactListComponent\";\nimport ConversationComponent from \"./components/ConversationComponent\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  background: #f8f9fb;\n`;\n\nconst ChatPlaceholder = styled.img`\n  width: 240px;\n  height: 240px;\n  border-radius: 50%;\n  object-fit: contain;\n`;\nconst Placeholder = styled.div`\n  flex: 3;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  gap:10px;\n  color: rgba(0, 0, 0, 0.45);\n  span {\n    font-size: 32px;\n    color: #525252;\n  }\n`;\nfunction App() {\n  const [selectedChat, setChat] = useState();\n  return (\n    <Container>\n      <ContactListComponent setChat={setChat} />\n      {selectedChat ? (\n        <ConversationComponent selectedChat={selectedChat} />\n      ) : (\n        <Placeholder>\n          <ChatPlaceholder src=\"/welcome-placeholder.jpeg\" />\n          <span>Keep your phone connected</span>\n          WhatsApp connects to your phone to sync messages.\n        </Placeholder>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}